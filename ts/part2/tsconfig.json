{
//  ts的json可以写注释
/*
*  tsconfig.json是ts编译器的配置文件，ts编译器可以根据它的信息来对代码进行编译
*  "include" 用来指定哪些ts文件需要被编译
   路径： * 表示任意文件; ** 表示任意目录
*  "exclude" 不需要被编译的文件目录
  
   */ 
  "include": [
    "./src/**/*"
  ],
/*
* compilerOptions 编译器的选项
*/
  "compilerOptions": {
    // target 用来指定ts被编译为ES的版本
    "target": "ES6",
    // 指定要使用的模块化的规范
    "module": "system",
    // lib用来指定项目中要使用的库,有默认值
    // "lib": ["DOM"],
    // outDir 用来指定编译后文件所在的目录
    "outDir": "./dist",
    // outFile将代码合并为一个文件
    // 设置outFile后，所有的全局作用域中的代码会合并到同一个文件中
    // 使用outFile，module则需要设置为amd或system
    "outFile": "./dist/app.js",
    // 是否对js文件进行编译，默认为false
    "allowJs": true,
    // 是否检查js代码是否符合语法规范，默认为false
    "checkJs": true,
    // 是否移除注释，默认为false
    "removeComments": true,
    // 不生成编译后的文件
    // "noEmit": true,
    // 当有错误的时候不生成编译后的文件
    "noEmitOnError": true,
    // 所有严格检查的总开关
    "strict": true,
    // 在js中加"use strict"则开启严格模式
    // 用来设置编译后的文件是否使用严格模式，默认为false
    "alwaysStrict": true,
    // 不允许隐式的any类型
    "noImplicitAny": true,
    // 不允许不明确类型的this
    "noImplicitThis": true,
    // 严格的检查空值
    "strictNullChecks": true
  }
}